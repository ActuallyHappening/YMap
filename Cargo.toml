[workspace]
members = ["crates/*", "crates/yscribble/bevy_*"]
# exclude the website to avoid having to recompile for different targets
exclude = ["crates/testing-winit", "crates/wasm-test", "website"]
resolver = "2"

[workspace.dependencies]
# in workspace for global versioning
surrealdb = "1.5.3"

### Internal re-exports deps
[workspace.dependencies.ymap]
path = "."

[workspace.dependencies.yutils]
path = "crates/yutils"

[workspace.dependencies.bevy_yscribble_3d]
path = "crates/yscribble/bevy_yscribble_3d"
features = ["bevy_replicon_replicated"]

[workspace.dependencies.ysurreal]
path = "crates/ysurreal"

[workspace.dependencies.yauth]
path = "crates/yauth"

### Internal deps

# to keep in sync with bevy itself
[workspace.dependencies.glam]
version = "0.25.0"

## For correct egui version
[workspace.dependencies.bevy_editor_pls]
# version = "0.8.1"
git = "https://github.com/ActuallyHappening/bevy_editor_pls.git"
branch = "update-gizmos"

## For `Debug` impl on `ParentSync`
[patch.crates-io.bevy_replicon]
# version = "0.26.3"
# git = "https://github.com/ActuallyHappening/bevy_replicon.git"
# branch = "debug-parent-sync"
git = "https://github.com/projectharmonia/bevy_replicon.git"
branch = "master"

## When not using apple pencil double tap support
[workspace.dependencies.bevy]
version = "0.13.2"
features = ["serialize"]

# ## For Apple pencil double tap support
# [patch.crates-io.winit]
# # version = "0.29"

# # git = "https://github.com/ActuallyHappening/winit.git"
# # branch = "remove-noisy-logs"

# path = "../winit"
# # branch = "testing-pen-taps"

# [workspace.dependencies.bevy]
# version = "0.13.2"
# features = ["serialize"]
# # git = "https://github.com/ActuallyHappening/bevy.git"
# # branch = "add-ansi-log-option"


## Workspace config
[workspace.lints.clippy]
type_complexity = "allow"

[workspace.metadata.scripts]
dev-install = "cargo install nu cargo-run-script apple-clis cargo-all-features cargo-bundle"

### Optimizations
[profile.dev]
debug = 0
strip = "debuginfo"

########## YMAP ##########

[package]
name = "ymap"
version = "0.1.0"
edition = "2021"
description = "test-ios app"
default-run = "app"
publish = false

[lib]
crate-type = ["staticlib", "cdylib", "rlib"]

[features]
## If enabled, will not link in production secrets
## ENABLE THIS FOR PRODUCTION BUILDS
production = []
default = ["debug"]
ios = []
## Enabled bevy_yscribble_3d/debug
debug = ["bevy_yscribble_3d/debug"]

[package.metadata.xcode-build-rs.ios]
## What features to enable for `ios` builds, see `xcode-build-rs` for more information
features = ["ios"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ysurreal.workspace = true
yauth.workspace = true
bevy.workspace = true
bevy_editor_pls.workspace = true
bevy_yscribble_3d.workspace = true
bevy_cosmic_edit = { version = "0.20.0", features = ["multicam"] }
bevy_egui = "0.27.1"
derive_more = "0.99.17"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["fmt"] }
bevy_replicon = "0.26.3"
bevy_replicon_renet = "0.3.0"
clap = { version = "4.5.7", features = ["derive", "env"] }
color-eyre = "0.6.3"
serde = { version = "1.0.203", features = ["derive"] }
extension-traits = "1.0.1"
tracing-error = "0.2.0"
camino = "1.1.7"
bossy = "0.2.1"
serde_json = "1.0.120"
rand = "0.8.5"

# for non-wasm builds
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
which = "6.0.1"
tokio = { version = "1.29.1", features = ["full"] }
surrealdb = { workspace = true, features = ["kv-mem", "protocol-http"] }
openssh = { version = "0.10.4", features = [
	"native-mux",
	"openssh-mux-client",
] }

# for wasm builds
[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1.29.1", features = ["sync", "macros", "rt"] }
surrealdb = { workspace = true }
getrandom = { version = "0.2.9", features = ["js"] }

# COPY for tokio wasm dependency
# # for non-wasm builds
# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# tokio = { version = "1.29.1", features = ["full"] }

# # for wasm builds
# [target.'cfg(target_arch = "wasm32")'.dependencies]
# tokio = { version = "1.29.1", features = ["sync", "macros", "rt"] }

[package.metadata.bundle]
identifier = "com.ymap.test-ios69"
resources = ["assets"]

[package.metadata.scripts]
open-xcode = "open xcode/*.xcodeproj"
# open-app = "open xcode/build/Debug-iphoneos/YMap.app"

[package.metadata.cargo-all-features]
# requires a bit of work and thinking
# denylist = ["production"]

[lints]
workspace = true

[[bin]]
name = "db"

[dev-dependencies]
test-log = { version = "0.2.16", features = ["trace"] }

# from previous project for wasm support
# [target.'cfg(target_arch = "wasm32")'.dependencies]
# getrandom = { version = "0.2.9", features = ["js"] }
# tracing-web = "0.1.2"
# console_error_panic_hook = "0.1.7"
# # wasm_thread = {version = "0.2.0", features = ["es_modules"]}
# # wasm-futures-executor = "0.2.0"

# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# arboard = "3.2.0"
# firebase-rs = "2.0.8"

# # tokio
# [target.'cfg(target_arch = "wasm32")'.dependencies.tokio]
# version = "1.29.1"
# features = ["macros", "rt", "sync"]

# [target.'cfg(not(target_arch = "wasm32"))'.dependencies.tokio]
# version = "1.29.1"
# features = ["macros", "rt", "sync", "rt-multi-thread"]

### Leptos for ymap crate
[package.metadata.leptonic]
style-dir = "leptonic/style"

js-dir = "leptonic/js"