[workspace]
members = [
    "web",
    "server",
    "server/cli",
    "utils",
    "env",
    "env/include_toml_key",
]
resolver = "3"

[workspace.dependencies]
utils = { path = "utils", default-features = false }
web = { path = "web", default-features = false }
server = { path = "server", default-features = false }
env = { path = "env", default-features = false }
include_toml_key = { path = "env/include_toml_key", default-features = false }
xserver = { path = "server/cli", default-features = false }

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
# codegen-units = 1
# panic = "abort"
panic = "unwind"

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 's'

# useful for debugging prod builds
# but be careful! They increase binary size
[profile.release]
# debug = "line-tables-only"
debug-assertions = true


[[workspace.metadata.leptos]]
name = "ymap"
bin-package = "server"
bin-target = "server"
lib-package = "web"

# blocked by https://github.com/rust-lang/rustc_codegen_cranelift/issues/1520
# bin-cargo-args = [
#   "--config",
#   "profile.dev.codegen-backend = \"cranelift\"",
#   "-Zcodegen-backend",
# ]

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "ymap"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public" # note: most assets live under domain.com/static/*

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = [] # implicit SSR feature

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
